name: Main workflow
on: push
env:
  docker_username: ${{ github.actor }}
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Build:
    runs-on: ubuntu-latest
    container: gradle:6-jdk11
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
      - run: ci/build-app.sh
      - name: Test
        run: ci/unit-test-app.sh
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: code
          path: .
  # build-and-push-latest:
  #   runs-on: ubuntu-latest
  #   needs: ['Build']
  #   permissions:
  #     packages: write
  #   steps:
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: app
  #         push: true
  #         tags: ghcr.io/${{ github.actor }}/micronaut-app:1.0-${{ github.sha }},ghcr.io/${{ github.actor }}/micronaut-app:latest
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      packages: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with: 
          name: code 
          path: .
      - name: build docker
        run: bash ci/build-docker.sh
      - name: push docker
        run: bash ci/push-docker.sh
  Component-test:
    runs-on: ubuntu-latest
    needs: ['Docker-image']
    steps:
      - name: Execute component test
        run: bash ci/component-test.sh
  Performance-test:
    runs-on: ubuntu-latest
    needs: ['Docker-image']
    steps:
      - name: Execute performance test
        run: bash ci/performance-test.sh
  Lint:
    runs-on: ubuntu-latest
    needs: ['Build']
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with: 
          name: code 
          path: .
      - name: Run linting
        uses: super-linter/super-linter/slim@main
        env: 
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true
